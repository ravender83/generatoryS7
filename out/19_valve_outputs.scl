FUNCTION "VALVES_outputs" : Void
TITLE = VALVES_outputs
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : PiotrSlezak
FAMILY : Vorster
VERSION : 0.1
//Funkcja obsługi elektrozaworów umożliwia diagnostykę obecności czujników PW i PR, wyświetlania alarmów i wysterowywania w ruchach ręcznych
   VAR_TEMP 
      nr : Int;
   END_VAR
   
BEGIN
	﻿    REGION VALVE [1] GN HOLDFACE
        REGION HP
            IF
                "Log_0" OR
                "A-Flags".STATION.IN_HP_STEP OR
                "DBVALVES".GN.﻿HOLDFACE.test.fp_HP
            THEN "DBVALVES".GN.﻿HOLDFACE.in.move_hp := True; ELSE "DBVALVES".GN.﻿HOLDFACE.in.move_hp := False; END_IF;
        END_REGION

        REGION WP
            IF
                "Log_0" OR
                "DBVALVES".GN.﻿HOLDFACE.test.fp_WP
            THEN "DBVALVES".GN.﻿HOLDFACE.in.move_wp := True; ELSE "DBVALVES".GN.﻿HOLDFACE.in.move_wp := False; END_IF;
        END_REGION

        REGION IDLE
            IF
                "Log_0" OR
                "DBVALVES".GN.﻿HOLDFACE.test.fp_IDLE
            THEN "DBVALVES".GN.﻿HOLDFACE.in.move_idle := True; ELSE "DBVALVES".GN.﻿HOLDFACE.in.move_idle := False; END_IF;
        END_REGION

        REGION EZ [1] GN HOLDFACE
            #nr := 1;

            "inst GN HOLDFACE"(in_safety_on := "A-Flags".STATION.SAFETY_OK,
                               in_curtain_on := "A-Flags".STATION.CURTAIN.OK,
                               in_move_hp := "DBVALVES".GN.﻿HOLDFACE.in.move_hp,
                               in_move_wp := "DBVALVES".GN.﻿HOLDFACE.in.move_wp,
                               in_move_idle := "DBVALVES".GN.﻿HOLDFACE.in.move_idle,
                               in_sensor_hp := %I10.1,
                               in_sensor_hp2 := %I10.1,
                               in_sensor_wp := %I11.1,
                               in_sensor_wp2 := %I11.1,
                               out_in_hp => "DBVALVES".GN.﻿HOLDFACE.out.in_hp,
                               out_in_wp => "DBVALVES".GN.﻿HOLDFACE.out.in_wp,
                               out_idle => "DBVALVES".GN.﻿HOLDFACE.out.in_idle,
                               out_status => "DBVALVES".GN.﻿HOLDFACE.out.status,
                               out_alarm_hp => "DBVALVES".GN.﻿HOLDFACE.out.alarm_hp,
                               out_alarm_wp => "DBVALVES".GN.﻿HOLDFACE.out.alarm_wp,
                               out_diag_status => "DBVALVES".GN.﻿HOLDFACE.out.diag_status,
                               in_ez_hp := %Q10.7,
                               in_ez_wp := %Q1.7,
                               in_ez_idle := %Q11.7);

            "A-status_diag"(in_diag_status := "DBVALVES".GN.﻿HOLDFACE.out.diag_status,
                            in_Ipw1 := 'I10.1',
                            in_Ipw2 := ' ',
                            in_Ipr1 := 'I11.1',
                            in_Ipr2 := ' ',
                            in_Qpw := 'Q10.7',
                            in_Qpr := 'Q1.7',
                            in_tio := "IO".io[#nr]);

            "A-TEST"(in_nr := #nr,
                     out := "DBVALVES".GN.﻿HOLDFACE.test);

            IF "A-Doku_DB_OP".Manual_Functions <> #nr THEN
                "DBVALVES".GN.﻿HOLDFACE.test.fp_HP := False;
                "DBVALVES".GN.﻿HOLDFACE.test.fp_WP := False;
                "DBVALVES".GN.﻿HOLDFACE.test.fp_IDLE := False;
            END_IF;

        END_REGION

    END_REGION
﻿    REGION VALVE [2] ST1 BLOCKADE_LEFT
        REGION HP
            IF
                "Log_0" OR
                "A-Flags".STATION.IN_HP_STEP OR
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_HP
            THEN "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_hp := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_hp := False; END_IF;
        END_REGION

        REGION WP
            IF
                "Log_0" OR
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_WP
            THEN "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_wp := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_wp := False; END_IF;
        END_REGION

        REGION IDLE
            IF
                "Log_0" OR
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_IDLE
            THEN "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_idle := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_idle := False; END_IF;
        END_REGION

        REGION EZ [2] ST1 BLOCKADE_LEFT
            #nr := 2;

            "inst ST1 BLOCKADE_LEFT"(in_safety_on := "A-Flags".STATION.SAFETY_OK,
                               in_curtain_on := "A-Flags".STATION.CURTAIN.OK,
                               in_move_hp := "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_hp,
                               in_move_wp := "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_wp,
                               in_move_idle := "DBVALVES".ST1.﻿BLOCKADE_LEFT.in.move_idle,
                               in_sensor_hp := %I20.4,
                               in_sensor_hp2 := %I20.4,
                               in_sensor_wp := %I21.4,
                               in_sensor_wp2 := %I21.4,
                               out_in_hp => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.in_hp,
                               out_in_wp => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.in_wp,
                               out_idle => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.in_idle,
                               out_status => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.status,
                               out_alarm_hp => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.alarm_hp,
                               out_alarm_wp => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.alarm_wp,
                               out_diag_status => "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.diag_status,
                               in_ez_hp := %Q20.6,
                               in_ez_wp := %Q21.6,
                               in_ez_idle := "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.dummy_IDLE);

            "A-status_diag"(in_diag_status := "DBVALVES".ST1.﻿BLOCKADE_LEFT.out.diag_status,
                            in_Ipw1 := 'I20.4',
                            in_Ipw2 := ' ',
                            in_Ipr1 := 'I21.4',
                            in_Ipr2 := ' ',
                            in_Qpw := 'Q20.6',
                            in_Qpr := 'Q21.6',
                            in_tio := "IO".io[#nr]);

            "A-TEST"(in_nr := #nr,
                     out := "DBVALVES".ST1.﻿BLOCKADE_LEFT.test);

            IF "A-Doku_DB_OP".Manual_Functions <> #nr THEN
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_HP := False;
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_WP := False;
                "DBVALVES".ST1.﻿BLOCKADE_LEFT.test.fp_IDLE := False;
            END_IF;

        END_REGION

    END_REGION
﻿    REGION VALVE [3] ST1 BLOCKADE_RIGHT
        REGION HP
            IF
                "Log_0" OR
                "A-Flags".STATION.IN_HP_STEP OR
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_HP
            THEN "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_hp := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_hp := False; END_IF;
        END_REGION

        REGION WP
            IF
                "Log_0" OR
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_WP
            THEN "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_wp := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_wp := False; END_IF;
        END_REGION

        REGION IDLE
            IF
                "Log_0" OR
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_IDLE
            THEN "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_idle := True; ELSE "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_idle := False; END_IF;
        END_REGION

        REGION EZ [3] ST1 BLOCKADE_RIGHT
            #nr := 3;

            "inst ST1 BLOCKADE_RIGHT"(in_safety_on := "A-Flags".STATION.SAFETY_OK,
                               in_curtain_on := "A-Flags".STATION.CURTAIN.OK,
                               in_move_hp := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_hp,
                               in_move_wp := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_wp,
                               in_move_idle := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.in.move_idle,
                               in_sensor_hp := %I20.5,
                               in_sensor_hp2 := %I20.5,
                               in_sensor_wp := %I21.5,
                               in_sensor_wp2 := %I21.5,
                               out_in_hp => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.in_hp,
                               out_in_wp => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.in_wp,
                               out_idle => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.in_idle,
                               out_status => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.status,
                               out_alarm_hp => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.alarm_hp,
                               out_alarm_wp => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.alarm_wp,
                               out_diag_status => "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.diag_status,
                               in_ez_hp := %Q20.7,
                               in_ez_wp := %Q21.7,
                               in_ez_idle := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.dummy_IDLE);

            "A-status_diag"(in_diag_status := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.out.diag_status,
                            in_Ipw1 := 'I20.5',
                            in_Ipw2 := ' ',
                            in_Ipr1 := 'I21.5',
                            in_Ipr2 := ' ',
                            in_Qpw := 'Q20.7',
                            in_Qpr := 'Q21.7',
                            in_tio := "IO".io[#nr]);

            "A-TEST"(in_nr := #nr,
                     out := "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test);

            IF "A-Doku_DB_OP".Manual_Functions <> #nr THEN
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_HP := False;
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_WP := False;
                "DBVALVES".ST1.﻿BLOCKADE_RIGHT.test.fp_IDLE := False;
            END_IF;

        END_REGION

    END_REGION
	
END_FUNCTION

